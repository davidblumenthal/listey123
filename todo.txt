##################################################################
####PhoneGap Client Side####
* Need an icon, cheerful boat slightly on its side puffing 1...2...3...
* Local storage needs to store data with the email of the person who logged in!  Otherwise, when you switch users you'll pull up the wrong data from localstorage.
* Add format versioning to client json hash to allow backwards compatibility.  Can be stored separately. 
* Periodically check the server to pull down updates.  Note that changes need to be pushed for any user that can view the list.
  * https://developers.google.com/appengine/docs/java/channel/?hl=en&csw=1

* Need to add copyright and license info to every file?
* update intro page with info, link to github, IN PROGRESS, etc
* Option to share particular lists with other users, in full or read-only mode.
  * Add JSON parsing/creation on server
  * add to self (X) that are allowing sharing of list Y with user Z
  * add to Y that someone else has shared list X
  * When list is shared, notify of change from server
  * Add shared list to json hash returned
    * pull all lists for other users
    * look what they've shared with requestor
    * pull out only those lists, add to response
  * Post of changes needs to split out lists for other users, update those lists in other users.
  * JSON hash should have a new level with user. 
  * shared-with list only kept on server, loaded via web request when needed?
  * 
  
* Add option to store a note with items
* refactor all my javascript to be in L123 namespace.
* normalize all the id+name formats
  
* Add delete options
* Add rename/delete dialog.
* Add uncheck-all option (ask if should uncheck for just the selected stores or all stores)
* Implement item configuration update
  * Count, custom amount text.  "+" "-" "Custom" instead of More/Less.  +/- greyed out if non-numeric "Custom" entered
* Finish category maintenance
* Finish item category save
* Add auto-suggest of items from standard list + deleted items
* Add rename of categories
* Add category items page where you can select a category then check off all items that belong in that store
* Add location (subcategory) options inside stores
* In location config, add page where you can check off all items from that store that belong in that location
* Support multiple locations, or just single?
* Replace error alerts with dialogs
* Add SyncML layer, or rework to be more granular and more parsimonious of bandwidth.
  * Add partial sync, so you can push changes for only one list?
* Add ability to send list as email
* Add manual ordering/reordering
* Select multiple stores on long-press, but on short-press open a single-select quick dropdown to select a single store.
* Change list name to selected store name (if 1) or e.g. "Store N... + 2 others"
* Option to use location services to figure out what store you're at?
* If size is wide enough, show date item was added/removed
* Options where you can turn that feature on/off.
* Add logout option
* Option to remember me.
** Server option to log out all remembered logins.
* Option to import/export from csv file.
* Ads
* Better colors/some graphics
* Need a way to log remember login or not, at least on the web version.
  * If remembering, add a logout button.
  * If not remembering, don't store data in localStorage.

* Adjust to add features for larger screens (option to display categories inline?)


################################################################
#### Implement server side ####
  * Implement OpenID
  * Add ability to upload list
  * Add ability to export list
  * Add ability to share/revoke share of list
    * As view-only
    * With full edit privs
  * Add ability to share an link to a list that doesn't require login
    * As view-only
  * Google ads

################################################################
#### Implement Android-Native ####
  * Reuse as much of the PhoneGap code as possible, but also implement background Sync



################################################################
#### Implement IOS-Native ####
  * Reuse as much of the PhoneGap code as possible, but also implement background Sync
  
  
  
  
###Notes
Server need to store
  * users lists
      * other users allowed to see each list
  
    * user is entity (kind=user)
      * name: user email address
      * each list is a separate entity with ancestor of the owner:(kind=list)
        * name: from sharded unique ID generator
        * displayName: property of the user-defined list name
        * current selectedCategories (categories to display) is only stored on client?
        * lastUpdate: last update time property
        
        * each other user allowed to view the list is added with an ancestor of the list: (kind=other_user_list)
          * name: other user email address
          * lastUpdate: last update time property
          * privLevel: property with possible values VIEW or FULL
          
        * each category is separate entity with ancestor of the list (kind=category)
          * name: unique name from sharded unique ID generator
          * displayName: property of the user-defined category name
          * lastUpdate: last update time property
          
        * each item is a separate entity (kind=item)
          * displayName: property of the user-defined item name
          * count: property of the number of items desired
          * status: property with possible values ACTIVE | COMPLETED | DELETED
          * lastUpdate: last update time property
          
          * each category the item is configured with is set up as a separate entity (kind=itemCategory)
            * name: category sharded name
            * lastUpdate: last update time property
            * status: property with possible values ACTIVE | DELETED (so we can compare timestamp if category is removed then readded in conflict)
            
        
      
      * shard counters to create a unique identifier for all items we add.
      https://developers.google.com/appengine/articles/sharding_counters
          e.g. entity1:1

* Given a user:
  * find their lists by looking up lists by the owner property.
  * find other user's lists they should be able to edit by looking up lists by other_user property (does this work with multiple values??)
  * Find who/what they granted privs to by looking up their lists and looking at the other_user property values
   
   
 

 